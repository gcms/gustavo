O pacote em questão provê a facilidade de comunicação entre dois processos
utilizando um protocolo de Requisição/Resposta que roda sobre um socket TCP.
O uso do TCP simplifica o desenvolvimento, pois livra o desenvolvedor de
detalhes de baixo nível, permitindo concentrar-se na integração entre as
partes da aplicação.

No modelo atual, um processo que deseja oferecer objetos para serem acessados
remotamente deve criar um servidor SDServer e registrar estes objetos junto ao
ObjectManager deste servidor. Um exemplo desta aplicação pode ser encontrado em
br.ufg.inf.sd2006.example.ServerMain.

Além disso, um nome pode ser atribuído a este servidor obtendo-se o Binder
relativo ao ObjectManager, o Binder permite que nomes sejam atribuídos aos
objetos.

Um processo interessado em acessar objetos existentes em outros processos, deve
fazê-lo através de um ObjectReference que consiste em um identificador de
objeto, o endereço da máquina em que o processo se encontra e o número da porta
utilizada pela conexão deste processo. Um exemplo desta utilização encontra-se
em br.ufg.inf.sd2006.example.ClientMain.

Com o uso do Binder o cliente também pode acessar um objeto através do seu nome
como no exemplo em br.ufg.inf.sd2006.example.ClientMain2.

Com o intuito de tornar mais transparente a interface do cliente, é possível o
uso de proxies. O proxy pode ser obtido diretamente a partir do RemoteObject
correspondente. Um exemplo deste uso encontra-se em
br.ufg.inf.sd2006.example.ClientMain3.

O objeto com identificar -1 em cada servidor é o binder, responsável por
traduzir nomes em referencias de objeto. O objeto com identificador 0
é responsável por listar os objetos registrados no servidor.

Os programas ClientMain, ClientMain2, ClientMain3 e ServerMain ilustram como
utilizar a arquitetura disponível.

Gustavo Cipriano Mota Sousa <gustavomota@inf.ufg.br>